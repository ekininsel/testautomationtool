// AUTO_GENERATED BY TestGenerationTool 
// Test class for Math Class
package junit.generate.test;

import static org.junit.Assert.*;

import CSseniorProject.Math;
import java.lang.Object;
import java.lang.String;
import java.util.Arrays;
import java.util.List;
import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.runners.Parameterized;

@RunWith(Parameterized.class)
public class MathTest {
  private final int int0;

  private final int int1;

  private final int int2;

  private final String str0;

  private final String str1;

  private final boolean boolean0;

  private final boolean boolean1;

  private final double double0;

  private final double double1;

  private final int intExpectedForİMethod;

  private final List ListExpectedForDeneme;

  private final List ListExpectedForDeneme1;

  private final List ListExpectedForDenemee;

  private final List ListExpectedForDenemeee;

  private final double DoubleExpectedForAdd;

  private final boolean BooleanExpectedForBol;

  private final boolean BooleanExpectedForValidate;

  private final Object ObjectExpectedForM3;

  public Math math;

  public MathTest(int int0, int int1, int int2, String str0, String str1, boolean boolean0,
      boolean boolean1, double double0, double double1, int intExpectedForİMethod,
      List ListExpectedForDeneme, List ListExpectedForDeneme1, List ListExpectedForDenemee,
      List ListExpectedForDenemeee, double DoubleExpectedForAdd, boolean BooleanExpectedForBol,
      boolean BooleanExpectedForValidate, Object ObjectExpectedForM3) {
    this.int0 = int0;
        this.int1 = int1;
        this.int2 = int2;
        this.str0 = str0;
        this.str1 = str1;
        this.boolean0 = boolean0;
        this.boolean1 = boolean1;
        this.double0 = double0;
        this.double1 = double1;
        this.intExpectedForİMethod = intExpectedForİMethod;
        this.ListExpectedForDeneme = ListExpectedForDeneme;
        this.ListExpectedForDeneme1 = ListExpectedForDeneme1;
        this.ListExpectedForDenemee = ListExpectedForDenemee;
        this.ListExpectedForDenemeee = ListExpectedForDenemeee;
        this.DoubleExpectedForAdd = DoubleExpectedForAdd;
        this.BooleanExpectedForBol = BooleanExpectedForBol;
        this.BooleanExpectedForValidate = BooleanExpectedForValidate;
        this.ObjectExpectedForM3 = ObjectExpectedForM3;
        ;
  }

  @Before
  public void initialize() {
    math = new Math();
  }

  @Parameterized.Parameters
  public static List dataForParameterized() {
    return Arrays.asList( new Object[][] {{26867, 26867, 26867, "6", "6", false, false, 2.1, 2.1, 80601, Arrays.asList(26867, 26867), Arrays.asList("6", "6"), Arrays.asList(false, false), Arrays.asList(2.1, 2.1), 26869.1, true, false, "6"} , {96282, 96282, 96282, "aa", "aa", true, true, 0.463, 0.463, 288846, Arrays.asList(96282, 96282), Arrays.asList("aa", "aa"), Arrays.asList(true, true), Arrays.asList(0.463, 0.463), 96282.463, true, false, "aa"} , {58198, 58198, 58198, "bgm", "bgm", true, true, 4.7041043978095E7, 4.7041043978095E7, 174594, Arrays.asList(58198, 58198), Arrays.asList("bgm", "bgm"), Arrays.asList(true, true), Arrays.asList(4.7041043978095E7, 4.7041043978095E7), 4.7099241978095E7, true, false, "bgm"} , {71283, 71283, 71283, "8icq", "8icq", false, false, 4.5537896078795E8, 4.5537896078795E8, 213849, Arrays.asList(71283, 71283), Arrays.asList("8icq", "8icq"), Arrays.asList(false, false), Arrays.asList(4.5537896078795E8, 4.5537896078795E8), 4.5545024378795E8, true, false, "8icq"} , {33624, 33624, 33624, "852Pv", "852Pv", true, true, 3.0585960985757E8, 3.0585960985757E8, 100872, Arrays.asList(33624, 33624), Arrays.asList("852Pv", "852Pv"), Arrays.asList(true, true), Arrays.asList(3.0585960985757E8, 3.0585960985757E8), 3.0589323385757E8, true, false, "852Pv"} , {79874, 79874, 79874, "Lui08c", "Lui08c", true, true, 5.7997922672993E8, 5.7997922672993E8, 239622, Arrays.asList(79874, 79874), Arrays.asList("Lui08c", "Lui08c"), Arrays.asList(true, true), Arrays.asList(5.7997922672993E8, 5.7997922672993E8), 5.8005910072993E8, true, false, "Lui08c"} , {12894, 12894, 12894, "qT65cet", "qT65cet", false, false, 1.7584743181811E9, 1.7584743181811E9, 38682, Arrays.asList(12894, 12894), Arrays.asList("qT65cet", "qT65cet"), Arrays.asList(false, false), Arrays.asList(1.7584743181811E9, 1.7584743181811E9), 1.7584872121811E9, true, false, "qT65cet"} , {99251, 99251, 99251, "HX27VGYO", "HX27VGYO", false, false, 2.0147098540618E9, 2.0147098540618E9, 297753, Arrays.asList(99251, 99251), Arrays.asList("HX27VGYO", "HX27VGYO"), Arrays.asList(false, false), Arrays.asList(2.0147098540618E9, 2.0147098540618E9), 2.0148091050618E9, true, true, "HX27VGYO"} , {36519, 36519, 36519, "iTBRq250k", "iTBRq250k", false, false, 1.7119480422028E9, 1.7119480422028E9, 109557, Arrays.asList(36519, 36519), Arrays.asList("iTBRq250k", "iTBRq250k"), Arrays.asList(false, false), Arrays.asList(1.7119480422028E9, 1.7119480422028E9), 1.7119845612028E9, true, false, "iTBRq250k"} , {35628, 35628, 35628, "YlsCgF6rAN", "YlsCgF6rAN", true, true, 1.3524072903702E9, 1.3524072903702E9, 106884, Arrays.asList(35628, 35628), Arrays.asList("YlsCgF6rAN", "YlsCgF6rAN"), Arrays.asList(true, true), Arrays.asList(1.3524072903702E9, 1.3524072903702E9), 1.3524429183702E9, true, false, "YlsCgF6rAN"} , {28957, 28957, 28957, "dfw335s", "dfw335s", false, false, 2.8423488986764E8, 2.8423488986764E8, 86871, Arrays.asList(28957, 28957), Arrays.asList("dfw335s", "dfw335s"), Arrays.asList(false, false), Arrays.asList(2.8423488986764E8, 2.8423488986764E8), 2.8426384686764E8, true, false, "dfw335s"} , {0, 0, 0, "3OctThpT9w", "3OctThpT9w", true, true, 1.6000351332549E9, 1.6000351332549E9, 0, Arrays.asList(0, 0), Arrays.asList("3OctThpT9w", "3OctThpT9w"), Arrays.asList(true, true), Arrays.asList(1.6000351332549E9, 1.6000351332549E9), 1.6000351332549E9, true, true, "3OctThpT9w"} , {68042, 68042, 68042, "mAidjLAc12", "mAidjLAc12", true, true, 1.320615761385E9, 1.320615761385E9, 204126, Arrays.asList(68042, 68042), Arrays.asList("mAidjLAc12", "mAidjLAc12"), Arrays.asList(true, true), Arrays.asList(1.320615761385E9, 1.320615761385E9), 1.320683803385E9, true, false, "mAidjLAc12"} , {48446, 48446, 48446, "sK1FyP3Fzp", "sK1FyP3Fzp", true, true, 8.796101025904E8, 8.796101025904E8, 145338, Arrays.asList(48446, 48446), Arrays.asList("sK1FyP3Fzp", "sK1FyP3Fzp"), Arrays.asList(true, true), Arrays.asList(8.796101025904E8, 8.796101025904E8), 8.796585485904E8, true, false, "sK1FyP3Fzp"} , {83548, 83548, 83548, "H0AdEzRjdr", "H0AdEzRjdr", false, false, 8.5237625760308E8, 8.5237625760308E8, 250644, Arrays.asList(83548, 83548), Arrays.asList("H0AdEzRjdr", "H0AdEzRjdr"), Arrays.asList(false, false), Arrays.asList(8.5237625760308E8, 8.5237625760308E8), 8.5245980560308E8, true, false, "H0AdEzRjdr"} , {6150, 6150, 6150, "6cszLpNYg8", "6cszLpNYg8", true, true, 1.2588406254138E9, 1.2588406254138E9, 18450, Arrays.asList(6150, 6150), Arrays.asList("6cszLpNYg8", "6cszLpNYg8"), Arrays.asList(true, true), Arrays.asList(1.2588406254138E9, 1.2588406254138E9), 1.2588467754138E9, true, false, "6cszLpNYg8"} , {1, 1, 1, "Kl5JPe7Qsa", "Kl5JPe7Qsa", false, false, 8.3372099161177E8, 8.3372099161177E8, 3, Arrays.asList(1, 1), Arrays.asList("Kl5JPe7Qsa", "Kl5JPe7Qsa"), Arrays.asList(false, false), Arrays.asList(8.3372099161177E8, 8.3372099161177E8), 8.3372099261177E8, true, true, "Kl5JPe7Qsa"} , {37919, 37919, 37919, "V55vlqLdcN", "V55vlqLdcN", false, false, 1.947816969093E9, 1.947816969093E9, 113757, Arrays.asList(37919, 37919), Arrays.asList("V55vlqLdcN", "V55vlqLdcN"), Arrays.asList(false, false), Arrays.asList(1.947816969093E9, 1.947816969093E9), 1.947854888093E9, true, false, "V55vlqLdcN"} , {23134, 23134, 23134, "3CZkkdKKkR", "3CZkkdKKkR", true, true, 5.2058227175759E8, 5.2058227175759E8, 69402, Arrays.asList(23134, 23134), Arrays.asList("3CZkkdKKkR", "3CZkkdKKkR"), Arrays.asList(true, true), Arrays.asList(5.2058227175759E8, 5.2058227175759E8), 5.2060540575759E8, true, false, "3CZkkdKKkR"} , {78339, 78339, 78339, "k9xMH1yapI6", "k9xMH1yapI6", false, false, 9.3850797956297E8, 9.3850797956297E8, 235017, Arrays.asList(78339, 78339), Arrays.asList("k9xMH1yapI6", "k9xMH1yapI6"), Arrays.asList(false, false), Arrays.asList(9.3850797956297E8, 9.3850797956297E8), 9.3858631856297E8, true, false, "k9xMH1yapI6"} , {98975, 98975, 98975, "EHcPb4t", "EHcPb4t", true, true, 4.0884115780962E8, 4.0884115780962E8, 296925, Arrays.asList(98975, 98975), Arrays.asList("EHcPb4t", "EHcPb4t"), Arrays.asList(true, true), Arrays.asList(4.0884115780962E8, 4.0884115780962E8), 4.0894013280962E8, true, false, "EHcPb4t"} , {68638, 68638, 68638, "6S6Mihb", "6S6Mihb", true, true, 1.2876204834004E9, 1.2876204834004E9, 205914, Arrays.asList(68638, 68638), Arrays.asList("6S6Mihb", "6S6Mihb"), Arrays.asList(true, true), Arrays.asList(1.2876204834004E9, 1.2876204834004E9), 1.2876891214004E9, true, false, "6S6Mihb"} , {55883, 55883, 55883, "h9OEUd6", "h9OEUd6", false, false, 4.0304334581232E8, 4.0304334581232E8, 167649, Arrays.asList(55883, 55883), Arrays.asList("h9OEUd6", "h9OEUd6"), Arrays.asList(false, false), Arrays.asList(4.0304334581232E8, 4.0304334581232E8), 4.0309922881232E8, true, false, "h9OEUd6"} , {283, 283, 283, "uycUUIw", "uycUUIw", true, true, 1.6498227762317E9, 1.6498227762317E9, 849, Arrays.asList(283, 283), Arrays.asList("uycUUIw", "uycUUIw"), Arrays.asList(true, true), Arrays.asList(1.6498227762317E9, 1.6498227762317E9), 1.6498230592317E9, true, true, "uycUUIw"} , {11853, 11853, 11853, "XkxE5Vl", "XkxE5Vl", false, false, 2.054846560043E9, 2.054846560043E9, 35559, Arrays.asList(11853, 11853), Arrays.asList("XkxE5Vl", "XkxE5Vl"), Arrays.asList(false, false), Arrays.asList(2.054846560043E9, 2.054846560043E9), 2.054858413043E9, true, false, "XkxE5Vl"} , {27270, 27270, 27270, "ePvaQep", "ePvaQep", false, false, 1.530942854287E9, 1.530942854287E9, 81810, Arrays.asList(27270, 27270), Arrays.asList("ePvaQep", "ePvaQep"), Arrays.asList(false, false), Arrays.asList(1.530942854287E9, 1.530942854287E9), 1.530970124287E9, true, false, "ePvaQep"} , {8218, 8218, 8218, "xtjMok1", "xtjMok1", true, true, 1.153240565463E9, 1.153240565463E9, 24654, Arrays.asList(8218, 8218), Arrays.asList("xtjMok1", "xtjMok1"), Arrays.asList(true, true), Arrays.asList(1.153240565463E9, 1.153240565463E9), 1.153248783463E9, true, false, "xtjMok1"} , {4154, 4154, 4154, "7NayXdV", "7NayXdV", true, true, 1.340095988376E9, 1.340095988376E9, 12462, Arrays.asList(4154, 4154), Arrays.asList("7NayXdV", "7NayXdV"), Arrays.asList(true, true), Arrays.asList(1.340095988376E9, 1.340095988376E9), 1.340100142376E9, true, false, "7NayXdV"} , {24114, 24114, 24114, "CemSFEc", "CemSFEc", false, false, 1.535123695285E9, 1.535123695285E9, 72342, Arrays.asList(24114, 24114), Arrays.asList("CemSFEc", "CemSFEc"), Arrays.asList(false, false), Arrays.asList(1.535123695285E9, 1.535123695285E9), 1.535147809285E9, true, false, "CemSFEc"} , {23812, 23812, 23812, "RtF03vF", "RtF03vF", false, false, 6.19702887711E8, 6.19702887711E8, 71436, Arrays.asList(23812, 23812), Arrays.asList("RtF03vF", "RtF03vF"), Arrays.asList(false, false), Arrays.asList(6.19702887711E8, 6.19702887711E8), 6.19726699711E8, true, false, "RtF03vF"} , {76024, 76024, 76024, "MKa", "MKa", true, true, 1.257802801414E9, 1.257802801414E9, 228072, Arrays.asList(76024, 76024), Arrays.asList("MKa", "MKa"), Arrays.asList(true, true), Arrays.asList(1.257802801414E9, 1.257802801414E9), 1.257878825414E9, true, false, "MKa"} , {80901, 80901, 80901, "aWi", "aWi", false, false, 5.09573398763E8, 5.09573398763E8, 242703, Arrays.asList(80901, 80901), Arrays.asList("aWi", "aWi"), Arrays.asList(false, false), Arrays.asList(5.09573398763E8, 5.09573398763E8), 5.09654299763E8, true, false, "aWi"} , {3739, 3739, 3739, "Iq1", "Iq1", false, false, 2.091591514026E9, 2.091591514026E9, 11217, Arrays.asList(3739, 3739), Arrays.asList("Iq1", "Iq1"), Arrays.asList(false, false), Arrays.asList(2.091591514026E9, 2.091591514026E9), 2.091595253026E9, true, true, "Iq1"} , {9637, 9637, 9637, "cJt", "cJt", false, false, 2.056838691042E9, 2.056838691042E9, 28911, Arrays.asList(9637, 9637), Arrays.asList("cJt", "cJt"), Arrays.asList(false, false), Arrays.asList(2.056838691042E9, 2.056838691042E9), 2.056848328042E9, true, false, "cJt"} , {89425, 89425, 89425, "gEs", "gEs", true, true, 329525.792116, 329525.792116, 268275, Arrays.asList(89425, 89425), Arrays.asList("gEs", "gEs"), Arrays.asList(true, true), Arrays.asList(329525.792116, 329525.792116), 418950.792116, true, false, "gEs"} , {35128, 35128, 35128, "CYq", "CYq", true, true, 966334.902338, 966334.902338, 105384, Arrays.asList(35128, 35128), Arrays.asList("CYq", "CYq"), Arrays.asList(true, true), Arrays.asList(966334.902338, 966334.902338), 1001462.902338, true, false, "CYq"} , {32678, 32678, 32678, "5LE", "5LE", false, false, 762520.874732, 762520.874732, 98034, Arrays.asList(32678, 32678), Arrays.asList("5LE", "5LE"), Arrays.asList(false, false), Arrays.asList(762520.874732, 762520.874732), 795198.874732, true, false, "5LE"} , {78979, 78979, 78979, "uBq", "uBq", false, false, 266078.015954, 266078.015954, 236937, Arrays.asList(78979, 78979), Arrays.asList("uBq", "uBq"), Arrays.asList(false, false), Arrays.asList(266078.015954, 266078.015954), 345057.015954, true, true, "uBq"} , {3971, 3971, 3971, "aKA", "aKA", true, true, 569978.695379, 569978.695379, 11913, Arrays.asList(3971, 3971), Arrays.asList("aKA", "aKA"), Arrays.asList(true, true), Arrays.asList(569978.695379, 569978.695379), 573949.695379, true, false, "aKA"} , {61768, 61768, 61768, "m4L", "m4L", true, true, 671141.723585, 671141.723585, 185304, Arrays.asList(61768, 61768), Arrays.asList("m4L", "m4L"), Arrays.asList(true, true), Arrays.asList(671141.723585, 671141.723585), 732909.723585, true, false, "m4L"} , {3102, 3102, 3102, "L8", "L8", true, true, 304431.838462, 304431.838462, 9306, Arrays.asList(3102, 3102), Arrays.asList("L8", "L8"), Arrays.asList(true, true), Arrays.asList(304431.838462, 304431.838462), 307533.838462, true, false, "L8"} , {54323, 54323, 54323, "TB", "TB", true, true, 164548.2, 164548.2, 162969, Arrays.asList(54323, 54323), Arrays.asList("TB", "TB"), Arrays.asList(true, true), Arrays.asList(164548.2, 164548.2), 218871.2, true, true, "TB"} , {75464, 75464, 75464, "aY", "aY", false, false, 981520.5, 981520.5, 226392, Arrays.asList(75464, 75464), Arrays.asList("aY", "aY"), Arrays.asList(false, false), Arrays.asList(981520.5, 981520.5), 1056984.5, true, false, "aY"} , {31838, 31838, 31838, "uB", "uB", false, false, 513669.5, 513669.5, 95514, Arrays.asList(31838, 31838), Arrays.asList("uB", "uB"), Arrays.asList(false, false), Arrays.asList(513669.5, 513669.5), 545507.5, true, false, "uB"} , {64649, 64649, 64649, "rx", "rx", true, true, 551041.3, 551041.3, 193947, Arrays.asList(64649, 64649), Arrays.asList("rx", "rx"), Arrays.asList(true, true), Arrays.asList(551041.3, 551041.3), 615690.3, true, false, "rx"} , {38009, 38009, 38009, "QG", "QG", false, false, 152739.7, 152739.7, 114027, Arrays.asList(38009, 38009), Arrays.asList("QG", "QG"), Arrays.asList(false, false), Arrays.asList(152739.7, 152739.7), 190748.7, true, false, "QG"} , {68874, 68874, 68874, "MH", "MH", false, false, 564719.0, 564719.0, 206622, Arrays.asList(68874, 68874), Arrays.asList("MH", "MH"), Arrays.asList(false, false), Arrays.asList(564719.0, 564719.0), 633593.0, true, false, "MH"} , {10271, 10271, 10271, "H0", "H0", true, true, 900301.0, 900301.0, 30813, Arrays.asList(10271, 10271), Arrays.asList("H0", "H0"), Arrays.asList(true, true), Arrays.asList(900301.0, 900301.0), 910572.0, true, true, "H0"} , {876, 876, 876, "6l", "6l", false, false, 85424.8806, 85424.8806, 2628, Arrays.asList(876, 876), Arrays.asList("6l", "6l"), Arrays.asList(false, false), Arrays.asList(85424.8806, 85424.8806), 86300.8806, true, false, "6l"} , {53412, 53412, 53412, "t1", "t1", true, true, 286781.7608, 286781.7608, 160236, Arrays.asList(53412, 53412), Arrays.asList("t1", "t1"), Arrays.asList(true, true), Arrays.asList(286781.7608, 286781.7608), 340193.7608, true, false, "t1"}});
  }

  @Test
  public final void testİMethod() {
    assertEquals(intExpectedForİMethod, math.iMethod(int0, int1, int2));
  }

  @Test
  public final void testDeneme() {
    assertEquals(ListExpectedForDeneme, math.deneme(int0, int1));
  }

  @Test
  public final void testDeneme1() {
    assertEquals(ListExpectedForDeneme1, math.deneme1(str0, str1));
  }

  @Test
  public final void testDenemee() {
    assertEquals(ListExpectedForDenemee, math.denemee(boolean0, boolean1));
  }

  @Test
  public final void testDenemeee() {
    assertEquals(ListExpectedForDenemeee, math.denemeee(double0, double1));
  }

  @Test
  public final void testAdd() {
    assertEquals(DoubleExpectedForAdd, math.add(double0, int0));
  }

  @Test
  public final void testBol() {
    assertEquals(BooleanExpectedForBol, math.bol(boolean0));
  }

  @Test
  public final void testValidate() {
    assertEquals(BooleanExpectedForValidate, math.validate(int0));
  }

  @Test
  public final void testM3() {
    assertEquals(ObjectExpectedForM3, math.m3(str0));
  }
}
